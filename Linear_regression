"""
Simple Linear Regression Model 
PAckage sklearn
Sean Toroghi
"""

import matplotlib.pyplot as plt
import numpy as np
from sklearn import datasets, linear_model
from sklearn.metrics import mean_squared_error, r2_score
#load data set
diabetes = datasets.load_diabetes()

# Use only one feature
diabetes_X = diabetes.data[:, np.newaxis, 2]

#count # data-points
counts = np.count_nonzero(diabetes_X)
print ("Number of data points:",counts)


#split independant dataset into training/test
X_train = diabetes_X[:-25]
X_test = diabetes_X[-25:]

#split dependant dataset into training/test
y_train = diabetes.target[:-25]
y_test = diabetes.target[-25:]

#linear regression object
regression_1 = linear_model.LinearRegression()

#train the model
regression_1.fit(X_train, y_train)

#compute y_hat
y_hat = regression_1.predict(X_test)

# coefficients
print('Coefficients: \n', regression_1.coef_)

# The mean squared error
print("Mean squared error: %.2f"
      % mean_squared_error(y_test, y_hat))

# variance score: 1 is perfect prediction
print('Variance score: %.2f' % r2_score(y_test, y_hat))

# Plot outputs
plt.scatter(X_test, y_test,  color='black')
plt.plot(X_test, y_hat, color='blue', linewidth=3)

plt.xticks(())
plt.yticks(())

plt.show()
